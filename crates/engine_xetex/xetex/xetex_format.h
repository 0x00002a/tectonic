/* tectonic_xetex_format engine header for version 30 */
/* This file is automatically generated by the `xetex_format` `emit` example. Do not modify. */

#ifndef __TECTONIC_XETEX_FORMAT_ENGINE_HEADER__
#define __TECTONIC_XETEX_FORMAT_ENGINE_HEADER__

/* Memory settings */

#define HASH_SIZE 15000
#define HASH_EXTRA 600000
#define HASH_OFFSET 514
#define HASH_PRIME 8501
#define PRIM_SIZE 500
#define MAX_FONT_MAX 9000
#define MEM_TOP 4999999

/* Equivalents table addresses */

#define ACTIVE_BASE 1
#define SINGLE_BASE 1114113
#define NULL_CS 2228225
#define HASH_BASE 2228226
#define FROZEN_CONTROL_SEQUENCE 2243226
#define PRIM_EQTB_BASE 2243238
#define FROZEN_NULL_FONT 2243738
#define UNDEFINED_CONTROL_SEQUENCE 2252739
#define GLUE_BASE 2252740
#define SKIP_BASE 2252759
#define MU_SKIP_BASE 2253015
#define LOCAL_BASE 2253271
#define TOKS_BASE 2253284
#define ETEX_PEN_BASE 2253540
#define BOX_BASE 2253544
#define CUR_FONT_LOC 2253800
#define MATH_FONT_BASE 2253801
#define CAT_CODE_BASE 2254569
#define LC_CODE_BASE 3368681
#define UC_CODE_BASE 4482793
#define SF_CODE_BASE 5596905
#define MATH_CODE_BASE 6711017
#define CHAR_SUB_CODE_BASE 7825129
#define INT_BASE 8939241
#define COUNT_BASE 8939326
#define DEL_CODE_BASE 8939582
#define DIMEN_BASE 10053694
#define SCALED_BASE 10053717
#define EQTB_SIZE 10053972
#define EQTB_TOP 10653972

/* Integer parameters */

#define INT_PAR__pretolerance 0
#define INT_PAR__tolerance 1
#define INT_PAR__line_penalty 2
#define INT_PAR__hyphen_penalty 3
#define INT_PAR__ex_hyphen_penalty 4
#define INT_PAR__club_penalty 5
#define INT_PAR__widow_penalty 6
#define INT_PAR__display_widow_penalty 7
#define INT_PAR__broken_penalty 8
#define INT_PAR__bin_op_penalty 9
#define INT_PAR__rel_penalty 10
#define INT_PAR__pre_display_penalty 11
#define INT_PAR__post_display_penalty 12
#define INT_PAR__inter_line_penalty 13
#define INT_PAR__double_hyphen_demerits 14
#define INT_PAR__final_hyphen_demerits 15
#define INT_PAR__adj_demerits 16
#define INT_PAR__mag 17
#define INT_PAR__delimiter_factor 18
#define INT_PAR__looseness 19
#define INT_PAR__time 20
#define INT_PAR__day 21
#define INT_PAR__month 22
#define INT_PAR__year 23
#define INT_PAR__show_box_breadth 24
#define INT_PAR__show_box_depth 25
#define INT_PAR__hbadness 26
#define INT_PAR__vbadness 27
#define INT_PAR__pausing 28
#define INT_PAR__tracing_online 29
#define INT_PAR__tracing_macros 30
#define INT_PAR__tracing_stats 31
#define INT_PAR__tracing_paragraphs 32
#define INT_PAR__tracing_pages 33
#define INT_PAR__tracing_output 34
#define INT_PAR__tracing_lost_chars 35
#define INT_PAR__tracing_commands 36
#define INT_PAR__tracing_restores 37
#define INT_PAR__uc_hyph 38
#define INT_PAR__output_penalty 39
#define INT_PAR__max_dead_cycles 40
#define INT_PAR__hang_after 41
#define INT_PAR__floating_penalty 42
#define INT_PAR__global_defs 43
#define INT_PAR__cur_fam 44
#define INT_PAR__escape_char 45
#define INT_PAR__default_hyphen_char 46
#define INT_PAR__default_skew_char 47
#define INT_PAR__end_line_char 48
#define INT_PAR__new_line_char 49
#define INT_PAR__language 50
#define INT_PAR__left_hyphen_min 51
#define INT_PAR__right_hyphen_min 52
#define INT_PAR__holding_inserts 53
#define INT_PAR__error_context_lines 54
#define INT_PAR__char_sub_def_min 55
#define INT_PAR__char_sub_def_max 56
#define INT_PAR__tracing_char_sub_def 57
#define INT_PAR__tracing_assigns 58
#define INT_PAR__tracing_groups 59
#define INT_PAR__tracing_ifs 60
#define INT_PAR__tracing_scan_tokens 61
#define INT_PAR__tracing_nesting 62
#define INT_PAR__pre_display_direction 63
#define INT_PAR__last_line_fit 64
#define INT_PAR__saving_vdiscards 65
#define INT_PAR__saving_hyph_codes 66
#define INT_PAR__suppress_fontnotfound_error 67
#define INT_PAR__xetex_linebreak_locale 68
#define INT_PAR__xetex_linebreak_penalty 69
#define INT_PAR__xetex_protrude_chars 70
#define INT_PAR__texxet 71
#define INT_PAR__xetex_dash_break 72
#define INT_PAR__xetex_upwards 73
#define INT_PAR__xetex_use_glyph_metrics 74
#define INT_PAR__xetex_inter_char_tokens 75
#define INT_PAR__xetex_input_normalization 76
#define INT_PAR__xetex_default_input_mode 77
#define INT_PAR__xetex_default_input_encoding 78
#define INT_PAR__xetex_tracing_fonts 79
#define INT_PAR__xetex_interword_space_shaping 80
#define INT_PAR__xetex_generate_actual_text 81
#define INT_PAR__xetex_hyphenatable_length 82
#define INT_PAR__synctex 83
#define INT_PAR__pdfoutput 84
#define INT_PARS 85

/* Dimensional (length) parameters */

#define DIMEN_PAR__par_indent 0
#define DIMEN_PAR__math_surround 1
#define DIMEN_PAR__line_skip_limit 2
#define DIMEN_PAR__hsize 3
#define DIMEN_PAR__vsize 4
#define DIMEN_PAR__max_depth 5
#define DIMEN_PAR__split_max_depth 6
#define DIMEN_PAR__box_max_depth 7
#define DIMEN_PAR__hfuzz 8
#define DIMEN_PAR__vfuzz 9
#define DIMEN_PAR__delimiter_shortfall 10
#define DIMEN_PAR__null_delimiter_space 11
#define DIMEN_PAR__script_space 12
#define DIMEN_PAR__pre_display_size 13
#define DIMEN_PAR__display_width 14
#define DIMEN_PAR__display_indent 15
#define DIMEN_PAR__overfull_rule 16
#define DIMEN_PAR__hang_indent 17
#define DIMEN_PAR__h_offset 18
#define DIMEN_PAR__v_offset 19
#define DIMEN_PAR__emergency_stretch 20
#define DIMEN_PAR__pdf_page_width 21
#define DIMEN_PAR__pdf_page_height 22
#define DIMEN_PARS 23

/* Glue ("skip") parameters */

#define GLUE_PAR__line_skip 0
#define GLUE_PAR__baseline_skip 1
#define GLUE_PAR__par_skip 2
#define GLUE_PAR__above_display_skip 3
#define GLUE_PAR__below_display_skip 4
#define GLUE_PAR__above_display_short_skip 5
#define GLUE_PAR__below_display_short_skip 6
#define GLUE_PAR__left_skip 7
#define GLUE_PAR__right_skip 8
#define GLUE_PAR__top_skip 9
#define GLUE_PAR__split_top_skip 10
#define GLUE_PAR__tab_skip 11
#define GLUE_PAR__space_skip 12
#define GLUE_PAR__xspace_skip 13
#define GLUE_PAR__par_fill_skip 14
#define GLUE_PAR__xetex_linebreak_skip 15
#define GLUE_PAR__thin_mu_skip 16
#define GLUE_PAR__med_mu_skip 17
#define GLUE_PAR__thick_mu_skip 18
#define GLUE_PARS 19

/* "Local" parameters (mostly token lists) */

#define LOCAL__par_shape 0
#define LOCAL__output_routine 1
#define LOCAL__every_par 2
#define LOCAL__every_math 3
#define LOCAL__every_display 4
#define LOCAL__every_hbox 5
#define LOCAL__every_vbox 6
#define LOCAL__every_job 7
#define LOCAL__every_cr 8
#define LOCAL__err_help 9
#define LOCAL__every_eof 10
#define LOCAL__xetex_inter_char_toks 11
#define LOCAL__tectonic_coda_tokens 12
#define NUM_LOCALS 13

/* e-TeX penalties parameters */

#define ETEX_PENALTIES_PAR__inter_line_penalties 0
#define ETEX_PENALTIES_PAR__club_penalties 1
#define ETEX_PENALTIES_PAR__widow_penalties 2
#define ETEX_PENALTIES_PAR__display_widow_penalties 3
#define NUM_ETEX_PENALTIES 4

/* Commands */

#undef IGNORE /* Windows OS headers sometimes define this */

#define RELAX 0
#define ESCAPE RELAX /* Overloaded usage in parser */
#define LEFT_BRACE 1
#define RIGHT_BRACE 2
#define MATH_SHIFT 3
#define TAB_MARK 4
#define CAR_RET 5
#define OUT_PARAM CAR_RET /* Overloaded usage in macro evaluation */
#define MAC_PARAM 6
#define SUP_MARK 7
#define SUB_MARK 8
#define ENDV 9
#define IGNORE ENDV /* Overloaded usage in parser */
#define SPACER 10
#define LETTER 11
#define OTHER_CHAR 12
#define PAR_END 13
#define ACTIVE_CHAR PAR_END /* Overloaded usage in parser */
#define MATCH PAR_END /* Overloaded usage in macro evaluation */
#define STOP 14
#define COMMENT STOP /* Overloaded usage in parser */
#define END_MATCH STOP /* Overloaded usage in macro evaluation */
#define DELIM_NUM 15
#define INVALID_CHAR DELIM_NUM /* Overloaded usage in parser */
#define CHAR_NUM 16
#define MATH_CHAR_NUM 17
#define MARK 18
#define XRAY 19
#define MAKE_BOX 20
#define HMOVE 21
#define VMOVE 22
#define UN_HBOX 23
#define UN_VBOX 24
#define REMOVE_ITEM 25
#define HSKIP 26
#define VSKIP 27
#define MSKIP 28
#define KERN 29
#define MKERN 30
#define LEADER_SHIP 31
#define HALIGN 32
#define VALIGN 33
#define NO_ALIGN 34
#define VRULE 35
#define HRULE 36
#define INSERT 37
#define VADJUST 38
#define IGNORE_SPACES 39
#define AFTER_ASSIGNMENT 40
#define AFTER_GROUP 41
#define BREAK_PENALTY 42
#define START_PAR 43
#define ITAL_CORR 44
#define ACCENT 45
#define MATH_ACCENT 46
#define DISCRETIONARY 47
#define EQ_NO 48
#define LEFT_RIGHT 49
#define MATH_COMP 50
#define LIMIT_SWITCH 51
#define ABOVE 52
#define MATH_STYLE 53
#define MATH_CHOICE 54
#define NON_SCRIPT 55
#define VCENTER 56
#define CASE_SHIFT 57
#define MESSAGE 58
#define EXTENSION 59
#define IN_STREAM 60
#define BEGIN_GROUP 61
#define END_GROUP 62
#define OMIT 63
#define EX_SPACE 64
#define NO_BOUNDARY 65
#define RADICAL 66
#define END_CS_NAME 67
#define CHAR_GIVEN 68
#define MATH_GIVEN 69
#define XETEX_MATH_GIVEN 70
#define LAST_ITEM 71
#define TOKS_REGISTER 72
#define ASSIGN_TOKS 73
#define ASSIGN_INT 74
#define ASSIGN_DIMEN 75
#define ASSIGN_GLUE 76
#define ASSIGN_MU_GLUE 77
#define ASSIGN_FONT_DIMEN 78
#define ASSIGN_FONT_INT 79
#define SET_AUX 80
#define SET_PREV_GRAF 81
#define SET_PAGE_DIMEN 82
#define SET_PAGE_INT 83
#define SET_BOX_DIMEN 84
#define SET_SHAPE 85
#define DEF_CODE 86
#define XETEX_DEF_CODE 87
#define DEF_FAMILY 88
#define SET_FONT 89
#define DEF_FONT 90
#define REGISTER 91
#define ADVANCE 92
#define MULTIPLY 93
#define DIVIDE 94
#define PREFIX 95
#define LET 96
#define SHORTHAND_DEF 97
#define READ_TO_CS 98
#define DEF 99
#define SET_BOX 100
#define HYPH_DATA 101
#define SET_INTERACTION 102
#define UNDEFINED_CS 103
#define EXPAND_AFTER 104
#define NO_EXPAND 105
#define INPUT 106
#define IF_TEST 107
#define FI_OR_ELSE 108
#define CS_NAME 109
#define CONVERT 110
#define THE 111
#define TOP_BOT_MARK 112
#define CALL 113
#define LONG_CALL 114
#define OUTER_CALL 115
#define LONG_OUTER_CALL 116
#define END_TEMPLATE 117
#define DONT_EXPAND 118
#define GLUE_REF 119
#define SHAPE_REF 120
#define BOX_REF 121
#define DATA 122

/* Primitives */

enum xetex_format_primitive_extra_init_t {
    xf_prim_init_none = 0,
    xf_prim_init_par = 1,
    xf_prim_init_write = 2
    /* Other values should be used to set up a "frozen" primitive */
};

typedef struct xetex_format_primitive_def_t {
    char const *name;
    eight_bits cmd;
    int32_t chr;
    int32_t extra_init;
} xetex_format_primitive_def_t;

#define XETEX_FORMAT_PRIMITIVE_INITIALIZERS \
    { "relax", RELAX, TOO_BIG_USV, FROZEN_RELAX }, \
    { "span", TAB_MARK, SPAN_CODE, xf_prim_init_none }, \
    { "cr", CAR_RET, CR_CODE, FROZEN_CR }, \
    { "crcr", CAR_RET, CR_CR_CODE, xf_prim_init_none }, \
    { "par", PAR_END, TOO_BIG_USV, xf_prim_init_par }, \
    { "end", STOP, 0, xf_prim_init_none }, \
    { "dump", STOP, 1, xf_prim_init_none }, \
    { "delimiter", DELIM_NUM, 0, xf_prim_init_none }, \
    { "Udelimiter", DELIM_NUM, 1, xf_prim_init_none }, \
    { "XeTeXdelimiter", DELIM_NUM, 1, xf_prim_init_none }, \
    { "char", CHAR_NUM, 0, xf_prim_init_none }, \
    { "mathchar", MATH_CHAR_NUM, 0, xf_prim_init_none }, \
    { "Umathcharnum", MATH_CHAR_NUM, 1, xf_prim_init_none }, \
    { "XeTeXmathcharnum", MATH_CHAR_NUM, 1, xf_prim_init_none }, \
    { "Umathchar", MATH_CHAR_NUM, 2, xf_prim_init_none }, \
    { "XeTeXmathchar", MATH_CHAR_NUM, 2, xf_prim_init_none }, \
    { "mark", MARK, 0, xf_prim_init_none }, \
    { "marks", MARK, 5, xf_prim_init_none }, \
    { "show", XRAY, SHOW_CODE, xf_prim_init_none }, \
    { "showbox", XRAY, SHOW_BOX_CODE, xf_prim_init_none }, \
    { "showthe", XRAY, SHOW_THE_CODE, xf_prim_init_none }, \
    { "showlists", XRAY, SHOW_LISTS, xf_prim_init_none }, \
    { "showgroups", XRAY, SHOW_GROUPS, xf_prim_init_none }, \
    { "showtokens", XRAY, SHOW_TOKENS, xf_prim_init_none }, \
    { "showifs", XRAY, SHOW_IFS, xf_prim_init_none }, \
    { "box", MAKE_BOX, BOX_CODE, xf_prim_init_none }, \
    { "copy", MAKE_BOX, COPY_CODE, xf_prim_init_none }, \
    { "lastbox", MAKE_BOX, LAST_BOX_CODE, xf_prim_init_none }, \
    { "vsplit", MAKE_BOX, VSPLIT_CODE, xf_prim_init_none }, \
    { "vtop", MAKE_BOX, VTOP_CODE, xf_prim_init_none }, \
    { "vbox", MAKE_BOX, VTOP_CODE + VMODE, xf_prim_init_none }, \
    { "hbox", MAKE_BOX, VTOP_CODE + HMODE, xf_prim_init_none }, \
    { "moveright", HMOVE, 0, xf_prim_init_none }, \
    { "moveleft", HMOVE, 1, xf_prim_init_none }, \
    { "lower", VMOVE, 0, xf_prim_init_none }, \
    { "raise", VMOVE, 1, xf_prim_init_none }, \
    { "unhbox", UN_HBOX, BOX_CODE, xf_prim_init_none }, \
    { "unhcopy", UN_HBOX, COPY_CODE, xf_prim_init_none }, \
    { "unvbox", UN_VBOX, BOX_CODE, xf_prim_init_none }, \
    { "unvcopy", UN_VBOX, COPY_CODE, xf_prim_init_none }, \
    { "pagediscards", UN_VBOX, LAST_BOX_CODE, xf_prim_init_none }, \
    { "splitdiscards", UN_VBOX, VSPLIT_CODE, xf_prim_init_none }, \
    { "unskip", REMOVE_ITEM, GLUE_NODE, xf_prim_init_none }, \
    { "unkern", REMOVE_ITEM, KERN_NODE, xf_prim_init_none }, \
    { "unpenalty", REMOVE_ITEM, PENALTY_NODE, xf_prim_init_none }, \
    { "hfil", HSKIP, FIL_CODE, xf_prim_init_none }, \
    { "hfill", HSKIP, FILL_CODE, xf_prim_init_none }, \
    { "hss", HSKIP, SS_CODE, xf_prim_init_none }, \
    { "hfilneg", HSKIP, FIL_NEG_CODE, xf_prim_init_none }, \
    { "hskip", HSKIP, SKIP_CODE, xf_prim_init_none }, \
    { "vfil", VSKIP, FIL_CODE, xf_prim_init_none }, \
    { "vfill", VSKIP, FILL_CODE, xf_prim_init_none }, \
    { "vss", VSKIP, SS_CODE, xf_prim_init_none }, \
    { "vfilneg", VSKIP, FIL_NEG_CODE, xf_prim_init_none }, \
    { "vskip", VSKIP, SKIP_CODE, xf_prim_init_none }, \
    { "mskip", MSKIP, MSKIP_CODE, xf_prim_init_none }, \
    { "kern", KERN, EXPLICIT, xf_prim_init_none }, \
    { "mkern", MKERN, MU_GLUE, xf_prim_init_none }, \
    { "shipout", LEADER_SHIP, A_LEADERS - 1, xf_prim_init_none }, \
    { "leaders", LEADER_SHIP, A_LEADERS, xf_prim_init_none }, \
    { "cleaders", LEADER_SHIP, C_LEADERS, xf_prim_init_none }, \
    { "xleaders", LEADER_SHIP, X_LEADERS, xf_prim_init_none }, \
    { "halign", HALIGN, 0, xf_prim_init_none }, \
    { "valign", VALIGN, 0, xf_prim_init_none }, \
    { "beginL", VALIGN, BEGIN_L_CODE, xf_prim_init_none }, \
    { "endL", VALIGN, END_L_CODE, xf_prim_init_none }, \
    { "beginR", VALIGN, BEGIN_R_CODE, xf_prim_init_none }, \
    { "endR", VALIGN, END_R_CODE, xf_prim_init_none }, \
    { "noalign", NO_ALIGN, 0, xf_prim_init_none }, \
    { "vrule", VRULE, 0, xf_prim_init_none }, \
    { "hrule", HRULE, 0, xf_prim_init_none }, \
    { "insert", INSERT, 0, xf_prim_init_none }, \
    { "vadjust", VADJUST, 0, xf_prim_init_none }, \
    { "ignorespaces", IGNORE_SPACES, 0, xf_prim_init_none }, \
    { "afterassignment", AFTER_ASSIGNMENT, 0, xf_prim_init_none }, \
    { "aftergroup", AFTER_GROUP, 0, xf_prim_init_none }, \
    { "penalty", BREAK_PENALTY, 0, xf_prim_init_none }, \
    { "noindent", START_PAR, 0, xf_prim_init_none }, \
    { "indent", START_PAR, 1, xf_prim_init_none }, \
    { "/", ITAL_CORR, 0, xf_prim_init_none }, \
    { "accent", ACCENT, 0, xf_prim_init_none }, \
    { "mathaccent", MATH_ACCENT, 0, xf_prim_init_none }, \
    { "Umathaccent", MATH_ACCENT, 1, xf_prim_init_none }, \
    { "XeTeXmathaccent", MATH_ACCENT, 1, xf_prim_init_none }, \
    { "discretionary", DISCRETIONARY, 0, xf_prim_init_none }, \
    { "-", DISCRETIONARY, 1, xf_prim_init_none }, \
    { "eqno", EQ_NO, 0, xf_prim_init_none }, \
    { "leqno", EQ_NO, 1, xf_prim_init_none }, \
    { "middle", LEFT_RIGHT, 1, xf_prim_init_none }, \
    { "left", LEFT_RIGHT, LEFT_NOAD, xf_prim_init_none }, \
    { "right", LEFT_RIGHT, RIGHT_NOAD, FROZEN_RIGHT }, \
    { "mathord", MATH_COMP, ORD_NOAD, xf_prim_init_none }, \
    { "mathop", MATH_COMP, OP_NOAD, xf_prim_init_none }, \
    { "mathbin", MATH_COMP, BIN_NOAD, xf_prim_init_none }, \
    { "mathrel", MATH_COMP, REL_NOAD, xf_prim_init_none }, \
    { "mathopen", MATH_COMP, OPEN_NOAD, xf_prim_init_none }, \
    { "mathclose", MATH_COMP, CLOSE_NOAD, xf_prim_init_none }, \
    { "mathpunct", MATH_COMP, PUNCT_NOAD, xf_prim_init_none }, \
    { "mathinner", MATH_COMP, INNER_NOAD, xf_prim_init_none }, \
    { "underline", MATH_COMP, UNDER_NOAD, xf_prim_init_none }, \
    { "overline", MATH_COMP, OVER_NOAD, xf_prim_init_none }, \
    { "displaylimits", LIMIT_SWITCH, NORMAL, xf_prim_init_none }, \
    { "limits", LIMIT_SWITCH, LIMITS, xf_prim_init_none }, \
    { "nolimits", LIMIT_SWITCH, NO_LIMITS, xf_prim_init_none }, \
    { "above", ABOVE, ABOVE_CODE, xf_prim_init_none }, \
    { "over", ABOVE, OVER_CODE, xf_prim_init_none }, \
    { "atop", ABOVE, ATOP_CODE, xf_prim_init_none }, \
    { "abovewithdelims", ABOVE, DELIMITED_CODE + ABOVE_CODE, xf_prim_init_none }, \
    { "overwithdelims", ABOVE, DELIMITED_CODE + OVER_CODE, xf_prim_init_none }, \
    { "atopwithdelims", ABOVE, DELIMITED_CODE + ATOP_CODE, xf_prim_init_none }, \
    { "displaystyle", MATH_STYLE, DISPLAY_STYLE, xf_prim_init_none }, \
    { "textstyle", MATH_STYLE, TEXT_STYLE, xf_prim_init_none }, \
    { "scriptstyle", MATH_STYLE, SCRIPT_STYLE, xf_prim_init_none }, \
    { "scriptscriptstyle", MATH_STYLE, SCRIPT_SCRIPT_STYLE, xf_prim_init_none }, \
    { "mathchoice", MATH_CHOICE, 0, xf_prim_init_none }, \
    { "nonscript", NON_SCRIPT, 0, xf_prim_init_none }, \
    { "vcenter", VCENTER, 0, xf_prim_init_none }, \
    { "lowercase", CASE_SHIFT, LC_CODE_BASE, xf_prim_init_none }, \
    { "uppercase", CASE_SHIFT, UC_CODE_BASE, xf_prim_init_none }, \
    { "message", MESSAGE, 0, xf_prim_init_none }, \
    { "errmessage", MESSAGE, 1, xf_prim_init_none }, \
    { "openout", EXTENSION, OPEN_NODE, xf_prim_init_none }, \
    { "write", EXTENSION, WRITE_NODE, xf_prim_init_write }, \
    { "closeout", EXTENSION, CLOSE_NODE, xf_prim_init_none }, \
    { "special", EXTENSION, SPECIAL_NODE, FROZEN_SPECIAL }, \
    { "immediate", EXTENSION, IMMEDIATE_CODE, xf_prim_init_none }, \
    { "setlanguage", EXTENSION, SET_LANGUAGE_CODE, xf_prim_init_none }, \
    { "pdfsavepos", EXTENSION, PDF_SAVE_POS_NODE, xf_prim_init_none }, \
    { "resettimer", EXTENSION, RESET_TIMER_CODE, xf_prim_init_none }, \
    { "setrandomseed", EXTENSION, SET_RANDOM_SEED_CODE, xf_prim_init_none }, \
    { "XeTeXdefaultencoding", EXTENSION, XETEX_DEFAULT_ENCODING_EXTENSION_CODE, xf_prim_init_none }, \
    { "XeTeXglyph", EXTENSION, GLYPH_CODE, xf_prim_init_none }, \
    { "XeTeXinputencoding", EXTENSION, XETEX_INPUT_ENCODING_EXTENSION_CODE, xf_prim_init_none }, \
    { "XeTeXlinebreaklocale", EXTENSION, XETEX_LINEBREAK_LOCALE_EXTENSION_CODE, xf_prim_init_none }, \
    { "XeTeXpdffile", EXTENSION, PDF_FILE_CODE, xf_prim_init_none }, \
    { "XeTeXpicfile", EXTENSION, PIC_FILE_CODE, xf_prim_init_none }, \
    { "closein", IN_STREAM, 0, xf_prim_init_none }, \
    { "openin", IN_STREAM, 1, xf_prim_init_none }, \
    { "begingroup", BEGIN_GROUP, 0, xf_prim_init_none }, \
    { "endgroup", END_GROUP, 0, FROZEN_END_GROUP }, \
    { "omit", OMIT, 0, xf_prim_init_none }, \
    { " ", EX_SPACE, 0, xf_prim_init_none }, \
    { "noboundary", NO_BOUNDARY, 0, xf_prim_init_none }, \
    { "radical", RADICAL, 0, xf_prim_init_none }, \
    { "Uradical", RADICAL, 1, xf_prim_init_none }, \
    { "XeTeXradical", RADICAL, 1, xf_prim_init_none }, \
    { "endcsname", END_CS_NAME, 0, xf_prim_init_none }, \
    { "badness", LAST_ITEM, BADNESS_CODE, xf_prim_init_none }, \
    { "currentgrouplevel", LAST_ITEM, CURRENT_GROUP_LEVEL_CODE, xf_prim_init_none }, \
    { "currentgrouptype", LAST_ITEM, CURRENT_GROUP_TYPE_CODE, xf_prim_init_none }, \
    { "currentifbranch", LAST_ITEM, CURRENT_IF_BRANCH_CODE, xf_prim_init_none }, \
    { "currentiflevel", LAST_ITEM, CURRENT_IF_LEVEL_CODE, xf_prim_init_none }, \
    { "currentiftype", LAST_ITEM, CURRENT_IF_TYPE_CODE, xf_prim_init_none }, \
    { "dimexpr", LAST_ITEM, ETEX_EXPR + 1, xf_prim_init_none }, \
    { "elapsedtime", LAST_ITEM, ELAPSED_TIME_CODE, xf_prim_init_none }, \
    { "eTeXversion", LAST_ITEM, ETEX_VERSION_CODE, xf_prim_init_none }, \
    { "fontchardp", LAST_ITEM, FONT_CHAR_DP_CODE, xf_prim_init_none }, \
    { "fontcharht", LAST_ITEM, FONT_CHAR_HT_CODE, xf_prim_init_none }, \
    { "fontcharic", LAST_ITEM, FONT_CHAR_IC_CODE, xf_prim_init_none }, \
    { "fontcharwd", LAST_ITEM, FONT_CHAR_WD_CODE, xf_prim_init_none }, \
    { "glueexpr", LAST_ITEM, ETEX_EXPR + 2, xf_prim_init_none }, \
    { "glueshrink", LAST_ITEM, GLUE_SHRINK_CODE, xf_prim_init_none }, \
    { "glueshrinkorder", LAST_ITEM, GLUE_SHRINK_ORDER_CODE, xf_prim_init_none }, \
    { "gluestretch", LAST_ITEM, GLUE_STRETCH_CODE, xf_prim_init_none }, \
    { "gluestretchorder", LAST_ITEM, GLUE_STRETCH_ORDER_CODE, xf_prim_init_none }, \
    { "gluetomu", LAST_ITEM, GLUE_TO_MU_CODE, xf_prim_init_none }, \
    { "inputlineno", LAST_ITEM, INPUT_LINE_NO_CODE, xf_prim_init_none }, \
    { "lastkern", LAST_ITEM, DIMEN_VAL, xf_prim_init_none }, \
    { "lastnodetype", LAST_ITEM, LAST_NODE_TYPE_CODE, xf_prim_init_none }, \
    { "lastpenalty", LAST_ITEM, INT_VAL, xf_prim_init_none }, \
    { "lastskip", LAST_ITEM, GLUE_VAL, xf_prim_init_none }, \
    { "muexpr", LAST_ITEM, ETEX_EXPR + 3, xf_prim_init_none }, \
    { "mutoglue", LAST_ITEM, MU_TO_GLUE_CODE, xf_prim_init_none }, \
    { "numexpr", LAST_ITEM, ETEX_EXPR + 0, xf_prim_init_none }, \
    { "parshapedimen", LAST_ITEM, PAR_SHAPE_DIMEN_CODE, xf_prim_init_none }, \
    { "parshapeindent", LAST_ITEM, PAR_SHAPE_INDENT_CODE, xf_prim_init_none }, \
    { "parshapelength", LAST_ITEM, PAR_SHAPE_LENGTH_CODE, xf_prim_init_none }, \
    { "pdflastxpos", LAST_ITEM, PDF_LAST_X_POS_CODE, xf_prim_init_none }, \
    { "pdflastypos", LAST_ITEM, PDF_LAST_Y_POS_CODE, xf_prim_init_none }, \
    { "randomseed", LAST_ITEM, RANDOM_SEED_CODE, xf_prim_init_none }, \
    { "shellescape", LAST_ITEM, PDF_SHELL_ESCAPE_CODE, xf_prim_init_none }, \
    { "XeTeXcharglyph", LAST_ITEM, XETEX_MAP_CHAR_TO_GLYPH_CODE, xf_prim_init_none }, \
    { "XeTeXcountfeatures", LAST_ITEM, XETEX_COUNT_FEATURES_CODE, xf_prim_init_none }, \
    { "XeTeXcountglyphs", LAST_ITEM, XETEX_COUNT_GLYPHS_CODE, xf_prim_init_none }, \
    { "XeTeXcountselectors", LAST_ITEM, XETEX_COUNT_SELECTORS_CODE, xf_prim_init_none }, \
    { "XeTeXcountvariations", LAST_ITEM, XETEX_COUNT_VARIATIONS_CODE, xf_prim_init_none }, \
    { "XeTeXfeaturecode", LAST_ITEM, XETEX_FEATURE_CODE_CODE, xf_prim_init_none }, \
    { "XeTeXfindfeaturebyname", LAST_ITEM, XETEX_FIND_FEATURE_BY_NAME_CODE, xf_prim_init_none }, \
    { "XeTeXfindselectorbyname", LAST_ITEM, XETEX_FIND_SELECTOR_BY_NAME_CODE, xf_prim_init_none }, \
    { "XeTeXfindvariationbyname", LAST_ITEM, XETEX_FIND_VARIATION_BY_NAME_CODE, xf_prim_init_none }, \
    { "XeTeXfirstfontchar", LAST_ITEM, XETEX_FIRST_CHAR_CODE, xf_prim_init_none }, \
    { "XeTeXfonttype", LAST_ITEM, XETEX_FONT_TYPE_CODE, xf_prim_init_none }, \
    { "XeTeXglyphbounds", LAST_ITEM, XETEX_GLYPH_BOUNDS_CODE, xf_prim_init_none }, \
    { "XeTeXglyphindex", LAST_ITEM, XETEX_GLYPH_INDEX_CODE, xf_prim_init_none }, \
    { "XeTeXisdefaultselector", LAST_ITEM, XETEX_IS_DEFAULT_SELECTOR_CODE, xf_prim_init_none }, \
    { "XeTeXisexclusivefeature", LAST_ITEM, XETEX_IS_EXCLUSIVE_FEATURE_CODE, xf_prim_init_none }, \
    { "XeTeXlastfontchar", LAST_ITEM, XETEX_LAST_CHAR_CODE, xf_prim_init_none }, \
    { "XeTeXOTcountfeatures", LAST_ITEM, XETEX_OT_COUNT_FEATURES_CODE, xf_prim_init_none }, \
    { "XeTeXOTcountlanguages", LAST_ITEM, XETEX_OT_COUNT_LANGUAGES_CODE, xf_prim_init_none }, \
    { "XeTeXOTcountscripts", LAST_ITEM, XETEX_OT_COUNT_SCRIPTS_CODE, xf_prim_init_none }, \
    { "XeTeXOTfeaturetag", LAST_ITEM, XETEX_OT_FEATURE_CODE, xf_prim_init_none }, \
    { "XeTeXOTlanguagetag", LAST_ITEM, XETEX_OT_LANGUAGE_CODE, xf_prim_init_none }, \
    { "XeTeXOTscripttag", LAST_ITEM, XETEX_OT_SCRIPT_CODE, xf_prim_init_none }, \
    { "XeTeXpdfpagecount", LAST_ITEM, XETEX_PDF_PAGE_COUNT_CODE, xf_prim_init_none }, \
    { "XeTeXselectorcode", LAST_ITEM, XETEX_SELECTOR_CODE_CODE, xf_prim_init_none }, \
    { "XeTeXvariationdefault", LAST_ITEM, XETEX_VARIATION_DEFAULT_CODE, xf_prim_init_none }, \
    { "XeTeXvariationmax", LAST_ITEM, XETEX_VARIATION_MAX_CODE, xf_prim_init_none }, \
    { "XeTeXvariationmin", LAST_ITEM, XETEX_VARIATION_MIN_CODE, xf_prim_init_none }, \
    { "XeTeXvariation", LAST_ITEM, XETEX_VARIATION_CODE, xf_prim_init_none }, \
    { "XeTeXversion", LAST_ITEM, XETEX_VERSION_CODE, xf_prim_init_none }, \
    { "toks", TOKS_REGISTER, 0, xf_prim_init_none }, \
    { "fontdimen", ASSIGN_FONT_DIMEN, 0, xf_prim_init_none }, \
    { "hyphenchar", ASSIGN_FONT_INT, 0, xf_prim_init_none }, \
    { "skewchar", ASSIGN_FONT_INT, 1, xf_prim_init_none }, \
    { "lpcode", ASSIGN_FONT_INT, 2, xf_prim_init_none }, \
    { "rpcode", ASSIGN_FONT_INT, 3, xf_prim_init_none }, \
    { "prevdepth", SET_AUX, VMODE, xf_prim_init_none }, \
    { "spacefactor", SET_AUX, HMODE, xf_prim_init_none }, \
    { "prevgraf", SET_PREV_GRAF, 0, xf_prim_init_none }, \
    { "pagegoal", SET_PAGE_DIMEN, 0, xf_prim_init_none }, \
    { "pagetotal", SET_PAGE_DIMEN, 1, xf_prim_init_none }, \
    { "pagestretch", SET_PAGE_DIMEN, 2, xf_prim_init_none }, \
    { "pagefilstretch", SET_PAGE_DIMEN, 3, xf_prim_init_none }, \
    { "pagefillstretch", SET_PAGE_DIMEN, 4, xf_prim_init_none }, \
    { "pagefilllstretch", SET_PAGE_DIMEN, 5, xf_prim_init_none }, \
    { "pageshrink", SET_PAGE_DIMEN, 6, xf_prim_init_none }, \
    { "pagedepth", SET_PAGE_DIMEN, 7, xf_prim_init_none }, \
    { "deadcycles", SET_PAGE_INT, 0, xf_prim_init_none }, \
    { "insertpenalties", SET_PAGE_INT, 1, xf_prim_init_none }, \
    { "interactionmode", SET_PAGE_INT, 2, xf_prim_init_none }, \
    { "wd", SET_BOX_DIMEN, WIDTH_OFFSET, xf_prim_init_none }, \
    { "dp", SET_BOX_DIMEN, DEPTH_OFFSET, xf_prim_init_none }, \
    { "ht", SET_BOX_DIMEN, HEIGHT_OFFSET, xf_prim_init_none }, \
    { "catcode", DEF_CODE, CAT_CODE_BASE, xf_prim_init_none }, \
    { "lccode", DEF_CODE, LC_CODE_BASE, xf_prim_init_none }, \
    { "uccode", DEF_CODE, UC_CODE_BASE, xf_prim_init_none }, \
    { "sfcode", DEF_CODE, SF_CODE_BASE, xf_prim_init_none }, \
    { "mathcode", DEF_CODE, MATH_CODE_BASE, xf_prim_init_none }, \
    { "delcode", DEF_CODE, DEL_CODE_BASE, xf_prim_init_none }, \
    { "XeTeXcharclass", XETEX_DEF_CODE, SF_CODE_BASE, xf_prim_init_none }, \
    { "Umathcodenum", XETEX_DEF_CODE, MATH_CODE_BASE, xf_prim_init_none }, \
    { "XeTeXmathcodenum", XETEX_DEF_CODE, MATH_CODE_BASE, xf_prim_init_none }, \
    { "Umathcode", XETEX_DEF_CODE, MATH_CODE_BASE + 1, xf_prim_init_none }, \
    { "XeTeXmathcode", XETEX_DEF_CODE, MATH_CODE_BASE + 1, xf_prim_init_none }, \
    { "Udelcodenum", XETEX_DEF_CODE, DEL_CODE_BASE, xf_prim_init_none }, \
    { "XeTeXdelcodenum", XETEX_DEF_CODE, DEL_CODE_BASE, xf_prim_init_none }, \
    { "Udelcode", XETEX_DEF_CODE, DEL_CODE_BASE + 1, xf_prim_init_none }, \
    { "XeTeXdelcode", XETEX_DEF_CODE, DEL_CODE_BASE + 1, xf_prim_init_none }, \
    { "textfont", DEF_FAMILY, MATH_FONT_BASE + TEXT_SIZE, xf_prim_init_none }, \
    { "scriptfont", DEF_FAMILY, MATH_FONT_BASE + SCRIPT_SIZE, xf_prim_init_none }, \
    { "scriptscriptfont", DEF_FAMILY, MATH_FONT_BASE + SCRIPT_SCRIPT_SIZE, xf_prim_init_none }, \
    { "nullfont", SET_FONT, FONT_BASE, FROZEN_NULL_FONT }, \
    { "font", DEF_FONT, 0, xf_prim_init_none }, \
    { "count", REGISTER, 0, xf_prim_init_none }, \
    { "dimen", REGISTER, 1, xf_prim_init_none }, \
    { "skip", REGISTER, 2, xf_prim_init_none }, \
    { "muskip", REGISTER, 3, xf_prim_init_none }, \
    { "advance", ADVANCE, 0, xf_prim_init_none }, \
    { "multiply", MULTIPLY, 0, xf_prim_init_none }, \
    { "divide", DIVIDE, 0, xf_prim_init_none }, \
    { "long", PREFIX, 1, xf_prim_init_none }, \
    { "outer", PREFIX, 2, xf_prim_init_none }, \
    { "global", PREFIX, 4, xf_prim_init_none }, \
    { "protected", PREFIX, 8, xf_prim_init_none }, \
    { "let", LET, NORMAL, xf_prim_init_none }, \
    { "futurelet", LET, NORMAL + 1, xf_prim_init_none }, \
    { "chardef", SHORTHAND_DEF, CHAR_DEF_CODE, xf_prim_init_none }, \
    { "mathchardef", SHORTHAND_DEF, MATH_CHAR_DEF_CODE, xf_prim_init_none }, \
    { "countdef", SHORTHAND_DEF, COUNT_DEF_CODE, xf_prim_init_none }, \
    { "dimendef", SHORTHAND_DEF, DIMEN_DEF_CODE, xf_prim_init_none }, \
    { "skipdef", SHORTHAND_DEF, SKIP_DEF_CODE, xf_prim_init_none }, \
    { "muskipdef", SHORTHAND_DEF, MU_SKIP_DEF_CODE, xf_prim_init_none }, \
    { "toksdef", SHORTHAND_DEF, TOKS_DEF_CODE, xf_prim_init_none }, \
    { "Umathcharnumdef", SHORTHAND_DEF, XETEX_MATH_CHAR_NUM_DEF_CODE, xf_prim_init_none }, \
    { "XeTeXmathcharnumdef", SHORTHAND_DEF, XETEX_MATH_CHAR_NUM_DEF_CODE, xf_prim_init_none }, \
    { "Umathchardef", SHORTHAND_DEF, XETEX_MATH_CHAR_DEF_CODE, xf_prim_init_none }, \
    { "XeTeXmathchardef", SHORTHAND_DEF, XETEX_MATH_CHAR_DEF_CODE, xf_prim_init_none }, \
    { "read", READ_TO_CS, 0, xf_prim_init_none }, \
    { "readline", READ_TO_CS, 1, xf_prim_init_none }, \
    { "def", DEF, 0, xf_prim_init_none }, \
    { "gdef", DEF, 1, xf_prim_init_none }, \
    { "edef", DEF, 2, xf_prim_init_none }, \
    { "xdef", DEF, 3, xf_prim_init_none }, \
    { "setbox", SET_BOX, 0, xf_prim_init_none }, \
    { "hyphenation", HYPH_DATA, 0, xf_prim_init_none }, \
    { "patterns", HYPH_DATA, 1, xf_prim_init_none }, \
    { "batchmode", SET_INTERACTION, BATCH_MODE, xf_prim_init_none }, \
    { "nonstopmode", SET_INTERACTION, NONSTOP_MODE, xf_prim_init_none }, \
    { "scrollmode", SET_INTERACTION, SCROLL_MODE, xf_prim_init_none }, \
    { "errorstopmode", SET_INTERACTION, ERROR_STOP_MODE, xf_prim_init_none }, \
    { "expandafter", EXPAND_AFTER, 0, xf_prim_init_none }, \
    { "unless", EXPAND_AFTER, 1, xf_prim_init_none }, \
    { "noexpand", NO_EXPAND, 0, xf_prim_init_none }, \
    { "primitive", NO_EXPAND, 1, xf_prim_init_none }, \
    { "input", INPUT, 0, xf_prim_init_none }, \
    { "endinput", INPUT, 1, xf_prim_init_none }, \
    { "scantokens", INPUT, 2, xf_prim_init_none }, \
    { "if", IF_TEST, IF_CHAR_CODE, xf_prim_init_none }, \
    { "ifcat", IF_TEST, IF_CAT_CODE, xf_prim_init_none }, \
    { "ifnum", IF_TEST, IF_INT_CODE, xf_prim_init_none }, \
    { "ifdim", IF_TEST, IF_DIM_CODE, xf_prim_init_none }, \
    { "ifodd", IF_TEST, IF_ODD_CODE, xf_prim_init_none }, \
    { "ifvmode", IF_TEST, IF_VMODE_CODE, xf_prim_init_none }, \
    { "ifhmode", IF_TEST, IF_HMODE_CODE, xf_prim_init_none }, \
    { "ifmmode", IF_TEST, IF_MMODE_CODE, xf_prim_init_none }, \
    { "ifinner", IF_TEST, IF_INNER_CODE, xf_prim_init_none }, \
    { "ifvoid", IF_TEST, IF_VOID_CODE, xf_prim_init_none }, \
    { "ifhbox", IF_TEST, IF_HBOX_CODE, xf_prim_init_none }, \
    { "ifvbox", IF_TEST, IF_VBOX_CODE, xf_prim_init_none }, \
    { "ifx", IF_TEST, IFX_CODE, xf_prim_init_none }, \
    { "ifeof", IF_TEST, IF_EOF_CODE, xf_prim_init_none }, \
    { "iftrue", IF_TEST, IF_TRUE_CODE, xf_prim_init_none }, \
    { "iffalse", IF_TEST, IF_FALSE_CODE, xf_prim_init_none }, \
    { "ifcase", IF_TEST, IF_CASE_CODE, xf_prim_init_none }, \
    { "ifdefined", IF_TEST, IF_DEF_CODE, xf_prim_init_none }, \
    { "ifcsname", IF_TEST, IF_CS_CODE, xf_prim_init_none }, \
    { "iffontchar", IF_TEST, IF_FONT_CHAR_CODE, xf_prim_init_none }, \
    { "ifincsname", IF_TEST, IF_IN_CSNAME_CODE, xf_prim_init_none }, \
    { "ifprimitive", IF_TEST, IF_PRIMITIVE_CODE, xf_prim_init_none }, \
    { "fi", FI_OR_ELSE, FI_CODE, FROZEN_FI }, \
    { "else", FI_OR_ELSE, ELSE_CODE, xf_prim_init_none }, \
    { "or", FI_OR_ELSE, OR_CODE, xf_prim_init_none }, \
    { "csname", CS_NAME, 0, xf_prim_init_none }, \
    { "number", CONVERT, NUMBER_CODE, xf_prim_init_none }, \
    { "romannumeral", CONVERT, ROMAN_NUMERAL_CODE, xf_prim_init_none }, \
    { "string", CONVERT, STRING_CODE, xf_prim_init_none }, \
    { "meaning", CONVERT, MEANING_CODE, xf_prim_init_none }, \
    { "fontname", CONVERT, FONT_NAME_CODE, xf_prim_init_none }, \
    { "eTeXrevision", CONVERT, ETEX_REVISION_CODE, xf_prim_init_none }, \
    { "expanded", CONVERT, EXPANDED_CODE, xf_prim_init_none }, \
    { "leftmarginkern", CONVERT, LEFT_MARGIN_KERN_CODE, xf_prim_init_none }, \
    { "rightmarginkern", CONVERT, RIGHT_MARGIN_KERN_CODE, xf_prim_init_none }, \
    { "strcmp", CONVERT, PDF_STRCMP_CODE, xf_prim_init_none }, \
    { "creationdate", CONVERT, PDF_CREATION_DATE_CODE, xf_prim_init_none }, \
    { "filemoddate", CONVERT, PDF_FILE_MOD_DATE_CODE, xf_prim_init_none }, \
    { "filesize", CONVERT, PDF_FILE_SIZE_CODE, xf_prim_init_none }, \
    { "mdfivesum", CONVERT, PDF_MDFIVE_SUM_CODE, xf_prim_init_none }, \
    { "filedump", CONVERT, PDF_FILE_DUMP_CODE, xf_prim_init_none }, \
    { "uniformdeviate", CONVERT, UNIFORM_DEVIATE_CODE, xf_prim_init_none }, \
    { "normaldeviate", CONVERT, NORMAL_DEVIATE_CODE, xf_prim_init_none }, \
    { "XeTeXvariationname", CONVERT, XETEX_VARIATION_NAME_CODE, xf_prim_init_none }, \
    { "XeTeXrevision", CONVERT, XETEX_REVISION_CODE, xf_prim_init_none }, \
    { "XeTeXfeaturename", CONVERT, XETEX_FEATURE_NAME_CODE, xf_prim_init_none }, \
    { "XeTeXselectorname", CONVERT, XETEX_SELECTOR_NAME_CODE, xf_prim_init_none }, \
    { "XeTeXglyphname", CONVERT, XETEX_GLYPH_NAME_CODE, xf_prim_init_none }, \
    { "Uchar", CONVERT, XETEX_UCHAR_CODE, xf_prim_init_none }, \
    { "Ucharcat", CONVERT, XETEX_UCHARCAT_CODE, xf_prim_init_none }, \
    { "jobname", CONVERT, JOB_NAME_CODE, xf_prim_init_none }, \
    { "the", THE, 0, xf_prim_init_none }, \
    { "unexpanded", THE, 1, xf_prim_init_none }, \
    { "detokenize", THE, SHOW_TOKENS, xf_prim_init_none }, \
    { "topmark", TOP_BOT_MARK, TOP_MARK_CODE, xf_prim_init_none }, \
    { "firstmark", TOP_BOT_MARK, FIRST_MARK_CODE, xf_prim_init_none }, \
    { "botmark", TOP_BOT_MARK, BOT_MARK_CODE, xf_prim_init_none }, \
    { "splitfirstmark", TOP_BOT_MARK, SPLIT_FIRST_MARK_CODE, xf_prim_init_none }, \
    { "splitbotmark", TOP_BOT_MARK, SPLIT_BOT_MARK_CODE, xf_prim_init_none }, \
    { "topmarks", TOP_BOT_MARK, TOP_MARK_CODE + 5, xf_prim_init_none }, \
    { "firstmarks", TOP_BOT_MARK, FIRST_MARK_CODE + 5, xf_prim_init_none }, \
    { "botmarks", TOP_BOT_MARK, BOT_MARK_CODE + 5, xf_prim_init_none }, \
    { "splitfirstmarks", TOP_BOT_MARK, SPLIT_FIRST_MARK_CODE + 5, xf_prim_init_none }, \
    { "splitbotmarks", TOP_BOT_MARK, SPLIT_BOT_MARK_CODE + 5, xf_prim_init_none }, \
    { "pretolerance", ASSIGN_INT, INT_BASE + INT_PAR__pretolerance, xf_prim_init_none }, \
    { "tolerance", ASSIGN_INT, INT_BASE + INT_PAR__tolerance, xf_prim_init_none }, \
    { "linepenalty", ASSIGN_INT, INT_BASE + INT_PAR__line_penalty, xf_prim_init_none }, \
    { "hyphenpenalty", ASSIGN_INT, INT_BASE + INT_PAR__hyphen_penalty, xf_prim_init_none }, \
    { "exhyphenpenalty", ASSIGN_INT, INT_BASE + INT_PAR__ex_hyphen_penalty, xf_prim_init_none }, \
    { "clubpenalty", ASSIGN_INT, INT_BASE + INT_PAR__club_penalty, xf_prim_init_none }, \
    { "widowpenalty", ASSIGN_INT, INT_BASE + INT_PAR__widow_penalty, xf_prim_init_none }, \
    { "displaywidowpenalty", ASSIGN_INT, INT_BASE + INT_PAR__display_widow_penalty, xf_prim_init_none }, \
    { "brokenpenalty", ASSIGN_INT, INT_BASE + INT_PAR__broken_penalty, xf_prim_init_none }, \
    { "binoppenalty", ASSIGN_INT, INT_BASE + INT_PAR__bin_op_penalty, xf_prim_init_none }, \
    { "relpenalty", ASSIGN_INT, INT_BASE + INT_PAR__rel_penalty, xf_prim_init_none }, \
    { "predisplaypenalty", ASSIGN_INT, INT_BASE + INT_PAR__pre_display_penalty, xf_prim_init_none }, \
    { "postdisplaypenalty", ASSIGN_INT, INT_BASE + INT_PAR__post_display_penalty, xf_prim_init_none }, \
    { "interlinepenalty", ASSIGN_INT, INT_BASE + INT_PAR__inter_line_penalty, xf_prim_init_none }, \
    { "doublehyphendemerits", ASSIGN_INT, INT_BASE + INT_PAR__double_hyphen_demerits, xf_prim_init_none }, \
    { "finalhyphendemerits", ASSIGN_INT, INT_BASE + INT_PAR__final_hyphen_demerits, xf_prim_init_none }, \
    { "adjdemerits", ASSIGN_INT, INT_BASE + INT_PAR__adj_demerits, xf_prim_init_none }, \
    { "mag", ASSIGN_INT, INT_BASE + INT_PAR__mag, xf_prim_init_none }, \
    { "delimiterfactor", ASSIGN_INT, INT_BASE + INT_PAR__delimiter_factor, xf_prim_init_none }, \
    { "looseness", ASSIGN_INT, INT_BASE + INT_PAR__looseness, xf_prim_init_none }, \
    { "time", ASSIGN_INT, INT_BASE + INT_PAR__time, xf_prim_init_none }, \
    { "day", ASSIGN_INT, INT_BASE + INT_PAR__day, xf_prim_init_none }, \
    { "month", ASSIGN_INT, INT_BASE + INT_PAR__month, xf_prim_init_none }, \
    { "year", ASSIGN_INT, INT_BASE + INT_PAR__year, xf_prim_init_none }, \
    { "showboxbreadth", ASSIGN_INT, INT_BASE + INT_PAR__show_box_breadth, xf_prim_init_none }, \
    { "showboxdepth", ASSIGN_INT, INT_BASE + INT_PAR__show_box_depth, xf_prim_init_none }, \
    { "hbadness", ASSIGN_INT, INT_BASE + INT_PAR__hbadness, xf_prim_init_none }, \
    { "vbadness", ASSIGN_INT, INT_BASE + INT_PAR__vbadness, xf_prim_init_none }, \
    { "pausing", ASSIGN_INT, INT_BASE + INT_PAR__pausing, xf_prim_init_none }, \
    { "tracingonline", ASSIGN_INT, INT_BASE + INT_PAR__tracing_online, xf_prim_init_none }, \
    { "tracingmacros", ASSIGN_INT, INT_BASE + INT_PAR__tracing_macros, xf_prim_init_none }, \
    { "tracingstats", ASSIGN_INT, INT_BASE + INT_PAR__tracing_stats, xf_prim_init_none }, \
    { "tracingparagraphs", ASSIGN_INT, INT_BASE + INT_PAR__tracing_paragraphs, xf_prim_init_none }, \
    { "tracingpages", ASSIGN_INT, INT_BASE + INT_PAR__tracing_pages, xf_prim_init_none }, \
    { "tracingoutput", ASSIGN_INT, INT_BASE + INT_PAR__tracing_output, xf_prim_init_none }, \
    { "tracinglostchars", ASSIGN_INT, INT_BASE + INT_PAR__tracing_lost_chars, xf_prim_init_none }, \
    { "tracingcommands", ASSIGN_INT, INT_BASE + INT_PAR__tracing_commands, xf_prim_init_none }, \
    { "tracingrestores", ASSIGN_INT, INT_BASE + INT_PAR__tracing_restores, xf_prim_init_none }, \
    { "uchyph", ASSIGN_INT, INT_BASE + INT_PAR__uc_hyph, xf_prim_init_none }, \
    { "outputpenalty", ASSIGN_INT, INT_BASE + INT_PAR__output_penalty, xf_prim_init_none }, \
    { "maxdeadcycles", ASSIGN_INT, INT_BASE + INT_PAR__max_dead_cycles, xf_prim_init_none }, \
    { "hangafter", ASSIGN_INT, INT_BASE + INT_PAR__hang_after, xf_prim_init_none }, \
    { "floatingpenalty", ASSIGN_INT, INT_BASE + INT_PAR__floating_penalty, xf_prim_init_none }, \
    { "globaldefs", ASSIGN_INT, INT_BASE + INT_PAR__global_defs, xf_prim_init_none }, \
    { "fam", ASSIGN_INT, INT_BASE + INT_PAR__cur_fam, xf_prim_init_none }, \
    { "escapechar", ASSIGN_INT, INT_BASE + INT_PAR__escape_char, xf_prim_init_none }, \
    { "defaulthyphenchar", ASSIGN_INT, INT_BASE + INT_PAR__default_hyphen_char, xf_prim_init_none }, \
    { "defaultskewchar", ASSIGN_INT, INT_BASE + INT_PAR__default_skew_char, xf_prim_init_none }, \
    { "endlinechar", ASSIGN_INT, INT_BASE + INT_PAR__end_line_char, xf_prim_init_none }, \
    { "newlinechar", ASSIGN_INT, INT_BASE + INT_PAR__new_line_char, xf_prim_init_none }, \
    { "language", ASSIGN_INT, INT_BASE + INT_PAR__language, xf_prim_init_none }, \
    { "lefthyphenmin", ASSIGN_INT, INT_BASE + INT_PAR__left_hyphen_min, xf_prim_init_none }, \
    { "righthyphenmin", ASSIGN_INT, INT_BASE + INT_PAR__right_hyphen_min, xf_prim_init_none }, \
    { "holdinginserts", ASSIGN_INT, INT_BASE + INT_PAR__holding_inserts, xf_prim_init_none }, \
    { "errorcontextlines", ASSIGN_INT, INT_BASE + INT_PAR__error_context_lines, xf_prim_init_none }, \
    { "tracingassigns", ASSIGN_INT, INT_BASE + INT_PAR__tracing_assigns, xf_prim_init_none }, \
    { "tracinggroups", ASSIGN_INT, INT_BASE + INT_PAR__tracing_groups, xf_prim_init_none }, \
    { "tracingifs", ASSIGN_INT, INT_BASE + INT_PAR__tracing_ifs, xf_prim_init_none }, \
    { "tracingscantokens", ASSIGN_INT, INT_BASE + INT_PAR__tracing_scan_tokens, xf_prim_init_none }, \
    { "tracingnesting", ASSIGN_INT, INT_BASE + INT_PAR__tracing_nesting, xf_prim_init_none }, \
    { "predisplaydirection", ASSIGN_INT, INT_BASE + INT_PAR__pre_display_direction, xf_prim_init_none }, \
    { "lastlinefit", ASSIGN_INT, INT_BASE + INT_PAR__last_line_fit, xf_prim_init_none }, \
    { "savingvdiscards", ASSIGN_INT, INT_BASE + INT_PAR__saving_vdiscards, xf_prim_init_none }, \
    { "savinghyphcodes", ASSIGN_INT, INT_BASE + INT_PAR__saving_hyph_codes, xf_prim_init_none }, \
    { "suppressfontnotfounderror", ASSIGN_INT, INT_BASE + INT_PAR__suppress_fontnotfound_error, xf_prim_init_none }, \
    { "XeTeXlinebreakpenalty", ASSIGN_INT, INT_BASE + INT_PAR__xetex_linebreak_penalty, xf_prim_init_none }, \
    { "XeTeXprotrudechars", ASSIGN_INT, INT_BASE + INT_PAR__xetex_protrude_chars, xf_prim_init_none }, \
    { "TeXXeTstate", ASSIGN_INT, INT_BASE + INT_PAR__texxet, xf_prim_init_none }, \
    { "XeTeXdashbreakstate", ASSIGN_INT, INT_BASE + INT_PAR__xetex_dash_break, xf_prim_init_none }, \
    { "XeTeXupwardsmode", ASSIGN_INT, INT_BASE + INT_PAR__xetex_upwards, xf_prim_init_none }, \
    { "XeTeXuseglyphmetrics", ASSIGN_INT, INT_BASE + INT_PAR__xetex_use_glyph_metrics, xf_prim_init_none }, \
    { "XeTeXinterchartokenstate", ASSIGN_INT, INT_BASE + INT_PAR__xetex_inter_char_tokens, xf_prim_init_none }, \
    { "XeTeXinputnormalization", ASSIGN_INT, INT_BASE + INT_PAR__xetex_input_normalization, xf_prim_init_none }, \
    { "XeTeXtracingfonts", ASSIGN_INT, INT_BASE + INT_PAR__xetex_tracing_fonts, xf_prim_init_none }, \
    { "XeTeXinterwordspaceshaping", ASSIGN_INT, INT_BASE + INT_PAR__xetex_interword_space_shaping, xf_prim_init_none }, \
    { "XeTeXgenerateactualtext", ASSIGN_INT, INT_BASE + INT_PAR__xetex_generate_actual_text, xf_prim_init_none }, \
    { "XeTeXhyphenatablelength", ASSIGN_INT, INT_BASE + INT_PAR__xetex_hyphenatable_length, xf_prim_init_none }, \
    { "synctex", ASSIGN_INT, INT_BASE + INT_PAR__synctex, xf_prim_init_none }, \
    { "pdfoutput", ASSIGN_INT, INT_BASE + INT_PAR__pdfoutput, xf_prim_init_none }, \
    { "parindent", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__par_indent, xf_prim_init_none }, \
    { "mathsurround", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__math_surround, xf_prim_init_none }, \
    { "lineskiplimit", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__line_skip_limit, xf_prim_init_none }, \
    { "hsize", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__hsize, xf_prim_init_none }, \
    { "vsize", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__vsize, xf_prim_init_none }, \
    { "maxdepth", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__max_depth, xf_prim_init_none }, \
    { "splitmaxdepth", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__split_max_depth, xf_prim_init_none }, \
    { "boxmaxdepth", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__box_max_depth, xf_prim_init_none }, \
    { "hfuzz", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__hfuzz, xf_prim_init_none }, \
    { "vfuzz", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__vfuzz, xf_prim_init_none }, \
    { "delimitershortfall", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__delimiter_shortfall, xf_prim_init_none }, \
    { "nulldelimiterspace", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__null_delimiter_space, xf_prim_init_none }, \
    { "scriptspace", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__script_space, xf_prim_init_none }, \
    { "predisplaysize", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__pre_display_size, xf_prim_init_none }, \
    { "displaywidth", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__display_width, xf_prim_init_none }, \
    { "displayindent", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__display_indent, xf_prim_init_none }, \
    { "overfullrule", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__overfull_rule, xf_prim_init_none }, \
    { "hangindent", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__hang_indent, xf_prim_init_none }, \
    { "hoffset", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__h_offset, xf_prim_init_none }, \
    { "voffset", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__v_offset, xf_prim_init_none }, \
    { "emergencystretch", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__emergency_stretch, xf_prim_init_none }, \
    { "pdfpagewidth", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__pdf_page_width, xf_prim_init_none }, \
    { "pdfpageheight", ASSIGN_DIMEN, DIMEN_BASE + DIMEN_PAR__pdf_page_height, xf_prim_init_none }, \
    { "lineskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__line_skip, xf_prim_init_none }, \
    { "baselineskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__baseline_skip, xf_prim_init_none }, \
    { "parskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__par_skip, xf_prim_init_none }, \
    { "abovedisplayskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__above_display_skip, xf_prim_init_none }, \
    { "belowdisplayskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__below_display_skip, xf_prim_init_none }, \
    { "abovedisplayshortskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__above_display_short_skip, xf_prim_init_none }, \
    { "belowdisplayshortskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__below_display_short_skip, xf_prim_init_none }, \
    { "leftskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__left_skip, xf_prim_init_none }, \
    { "rightskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__right_skip, xf_prim_init_none }, \
    { "topskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__top_skip, xf_prim_init_none }, \
    { "splittopskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__split_top_skip, xf_prim_init_none }, \
    { "tabskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__tab_skip, xf_prim_init_none }, \
    { "spaceskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__space_skip, xf_prim_init_none }, \
    { "xspaceskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__xspace_skip, xf_prim_init_none }, \
    { "parfillskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__par_fill_skip, xf_prim_init_none }, \
    { "XeTeXlinebreakskip", ASSIGN_GLUE, GLUE_BASE + GLUE_PAR__xetex_linebreak_skip, xf_prim_init_none }, \
    { "thinmuskip", ASSIGN_MU_GLUE, GLUE_BASE + GLUE_PAR__thin_mu_skip, xf_prim_init_none }, \
    { "medmuskip", ASSIGN_MU_GLUE, GLUE_BASE + GLUE_PAR__med_mu_skip, xf_prim_init_none }, \
    { "thickmuskip", ASSIGN_MU_GLUE, GLUE_BASE + GLUE_PAR__thick_mu_skip, xf_prim_init_none }, \
    { "parshape", SET_SHAPE, LOCAL_BASE + LOCAL__par_shape, xf_prim_init_none }, \
    { "output", ASSIGN_TOKS, LOCAL_BASE + LOCAL__output_routine, xf_prim_init_none }, \
    { "everypar", ASSIGN_TOKS, LOCAL_BASE + LOCAL__every_par, xf_prim_init_none }, \
    { "everymath", ASSIGN_TOKS, LOCAL_BASE + LOCAL__every_math, xf_prim_init_none }, \
    { "everydisplay", ASSIGN_TOKS, LOCAL_BASE + LOCAL__every_display, xf_prim_init_none }, \
    { "everyhbox", ASSIGN_TOKS, LOCAL_BASE + LOCAL__every_hbox, xf_prim_init_none }, \
    { "everyvbox", ASSIGN_TOKS, LOCAL_BASE + LOCAL__every_vbox, xf_prim_init_none }, \
    { "everyjob", ASSIGN_TOKS, LOCAL_BASE + LOCAL__every_job, xf_prim_init_none }, \
    { "everycr", ASSIGN_TOKS, LOCAL_BASE + LOCAL__every_cr, xf_prim_init_none }, \
    { "errhelp", ASSIGN_TOKS, LOCAL_BASE + LOCAL__err_help, xf_prim_init_none }, \
    { "everyeof", ASSIGN_TOKS, LOCAL_BASE + LOCAL__every_eof, xf_prim_init_none }, \
    { "XeTeXinterchartoks", ASSIGN_TOKS, LOCAL_BASE + LOCAL__xetex_inter_char_toks, xf_prim_init_none }, \
    { "TectonicCodaTokens", ASSIGN_TOKS, LOCAL_BASE + LOCAL__tectonic_coda_tokens, xf_prim_init_none }, \
    { "interlinepenalties", SET_SHAPE, ETEX_PEN_BASE + ETEX_PENALTIES_PAR__inter_line_penalties, xf_prim_init_none }, \
    { "clubpenalties", SET_SHAPE, ETEX_PEN_BASE + ETEX_PENALTIES_PAR__club_penalties, xf_prim_init_none }, \
    { "widowpenalties", SET_SHAPE, ETEX_PEN_BASE + ETEX_PENALTIES_PAR__widow_penalties, xf_prim_init_none }, \
    { "displaywidowpenalties", SET_SHAPE, ETEX_PEN_BASE + ETEX_PENALTIES_PAR__display_widow_penalties, xf_prim_init_none }, \
    { NULL, 0, 0, 0 }
#endif
