# Copyright 2016-2020 the Tectonic Project
# Licensed under the MIT License.
#
# Azure Pipelines template for a standard build-and-test job getting
# dependencies through pkg-config. Besides the parameters, the following
# variables are expected:
#
# - TARGET: the build target triple (e.g. "x86_86-unknown-linux-gnu")
# - TOOLCHAIN: the rust toolchain type (e.g., "stable",
#   "beta-x86_64-pc-windows-msvc")

parameters:
- name: canaryBuild
  type: boolean
  default: false
- name: primaryRcBuild
  type: boolean
  default: false

steps:
- bash: echo here
  displayName: testCanaryTrue
  condition: parameters['canaryBuild']

- bash: echo here
  displayName: testCanaryFalse
  condition: not(parameters['canaryBuild'])

- template: azure-generic-build-setup.yml

- bash: |
    set -xeuo pipefail
    sudo apt-get update
    sudo env DEBIAN_FRONTEND=noninteractive apt-get install -y \
      libgraphite2-dev \
      libharfbuzz-dev \
      libfontconfig1-dev \
      libicu-dev \
      libssl-dev \
      openssl \
      zlib1g-dev
  displayName: "Install pkg-config dependencies (Ubuntu)"
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

- bash: |
    set -xeuo pipefail
    brew install harfbuzz openssl
    icupcdir="$(echo /usr/local/Cellar/icu4c/*/lib/pkgconfig)"
    export PKG_CONFIG_PATH="$icupcdir"
    set +x  # `set -x` messes up setvariable
    echo "##vso[task.setvariable variable=PKG_CONFIG_PATH;]$PKG_CONFIG_PATH"
  displayName: "Install pkg-config dependencies (macOS)"
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Darwin'))

# Note: setvariable + `set -x` adds spurious single quotes at ends of variable values
- bash: |
    echo "##vso[task.setvariable variable=TECTONIC_DEP_BACKEND;]pkg-config"
  displayName: Setup build variables

- template: azure-generic-build.yml
  parameters:
    ${{ if parameters.canaryBuild }}:
      canaryBuild: true
    ${{ if parameters.primaryRcBuild }}:
      primaryRcBuild: true
